version: '2'
services:
  nginx:
    build:
      context: ./dockerfile-nginx/
      dockerfile: Dockerfile.dev
    restart: always
    hostname: nginx
    container_name: dev_nginx_01
    networks:
      - pustakalaya-dev-network
    ports:
     - "81:8000"
    volumes:
     - ./src:/src
     - /library/media_root:/library/media_root
     - /library/static_root:/library/static_root
    depends_on:
     - web
  web:
    build:
      context: .
      dockerfile: ./dockerfile-django-web/Dockerfile.dev
    restart: always
    hostname: web
    container_name: dev_django_web_01
    command: ./script.d/run_web
    depends_on:
      - db
      - elastic
    volumes:
      - ./src:/src
      - /library/media_root:/library/media_root
      - /library/static_root:/library/static_root
    networks:
      - pustakalaya-dev-network
#    ports:
#      - "8001:8001"
    expose:
      - "8001"
    links:
      - rabbitmq
  db:
    build:
      context: ./dockerfile-postgres
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      - POSTGRES_USER=pustakalaya_user
      - POSTGRES_DB=pustakalaya
      - POSTGRES_PASSWORD=pustakalaya123
      - POSTGRES_BACKUP_DIR=/pg_backups

    hostname: db
    container_name: dev_postgres_01
    networks:
      - pustakalaya-dev-network
    volumes:
      - /library/backup_pg_pustakalaya:/pg_backups
      - ./src:/src
    expose:
      - "5432"
    ports:
      -  '5432:5432'


  elastic:
    build:
      context: ./dockerfile-elastic
      dockerfile: Dockerfile.dev
    hostname: elastic
    restart: always
    container_name: dev_elasticsearch_01
    volumes:
      - ./conf:/conf
    networks:
      - pustakalaya-dev-network
    # command: ./run_db.sh
    depends_on:
      - db
    expose:
      -  "9200"
      -  "9300"
    #ports:
    #  -  '9200:9200'


  rabbitmq:
    image: rabbitmq:3.7
    hostname: rabbitmq
    restart: always
    container_name: rabbitmq_prod_01
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    networks:
      - pustakalaya-dev-network

  celery:
    build:
      context: .
      dockerfile: ./dockerfile-celery/Dockerfile.dev
    hostname: celery
    restart: always
    container_name: dev_celery_01
    command: ./script.d/run_celery.sh
    networks:
      - pustakalaya-dev-network
    volumes:
      - ./src:/src
    links:
      - db
      - rabbitmq
networks:
  pustakalaya-dev-network:
    driver: bridge

# Stages are run in sequence, jobs in the same stage are run in parallel
# See https://docs.gitlab.com/ce/ci/yaml/
# TODO: Correct the tags to fit your gitlab


stages:
  - prepare-images
  - push-images
  - deploy-test
  - deploy-live
variables:
  PACKAGE_NAME: "awesome-django-app"
  RELEASE: "$(git describe --abbrev=0 --tags)"
  DEV_SERVER: "dev.pustakalaya.org"
  PROD_SERVER: "pustakalaya.org"
  TEST_SERVER: "olenepal local"


before_script:
  - cp -rv versions /library/media_root/release_version.txt

prepare:image:
  stage: prepare-images
  script:
    - docker-compose -f build.yml build
  only:
    - tags
  tags:
    - development

# Push
# ----
# Pushes the Docker image to th registry for selected tags
push:image:
  stage: push-images
  script:
    - docker-compose -f build.yml push
  # when: manual
  only:
    - tags
  tags:
    - development



deploy:production-test:
  stage: deploy-test
  script:
     - docker-compose -f build.yml pull
     - docker-compose -f production.yml down
     - docker-compose -f production.yml up -d
     - echo "Test Version $RELEASE is released  and can be accessed from 192.168.5.231:8000" |mail -s "TEST Pustakalaya $RELEASE released" bikram.dhoju@olenepal.org
  only:
    - tags
  tags:
    - production-test


deploy:production-live:
  stage: deploy-live
  script:
    - docker-compose -f build.yml pull
    - docker-compose -f production.yml down
    - docker-compose -f production.yml up -d
    - echo "Version $RELEASE is released  and can be accessed from https://pustakalaya.org" |mail -s "Pustakalaya $RELEASE released" bikram.dhoju@olenepal.org
  only:
    - tags
  when: manual
  tags:
    - production
